knitr::opts_chunk$set(echo = TRUE)
wine <- read_csv("winemag-data-130k-v2.csv")
library(tidyverse)
wine <- read_csv("winemag-data-130k-v2.csv")
wine <- subset(wine, select = -X1 )
names(wine)[4] <- "quality"
shiny::runApp('wineapp')
wine <- read_csv("winemag-data-130k-v2.csv")
wine <- subset(wine, select = -X1 )
names(wine)[4] <- "quality"
# join the two tables here to create a map
world <- map_data("world")
highlighted <- subset(world, region == "Canada")
#names(wine)[1] <- "region"
#test <- left_join(world,wine)
w_count <- wine %>%
group_by(country) %>%
mutate(count = n()) %>% # count the # of entries in each country
select(country, count)
w_count <- unique(w_count)
names(w_count)[1] <- "region"
test <- left_join(world,w_count)
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
theme_minimal() +
scale_fill_gradient(low = "misty rose",high = "violetred4", name= "Numbers of \nEntries") +
xlab("Longitude") +
ylab("Latitude"))
map +
geom_polygon(data = highlighted, aes(x = long, y = lat), fill = NA, colour = "black")
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
theme_minimal() +
scale_fill_gradient(low = "misty rose",high = "violetred4", name= "Numbers of \nEntries") +
xlab("Longitude") +
ylab("Latitude"))
map +
geom_polygon(data = highlighted, aes(x = long, y = lat),group = group, fill = NA, colour = "black")
View(highlighted)
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
theme_minimal() +
scale_fill_gradient(low = "misty rose",high = "violetred4", name= "Numbers of \nEntries") +
xlab("Longitude") +
ylab("Latitude"))
map +
geom_polygon(data = highlighted, aes(x = long, y = lat,group = group), fill = NA, colour = "black")
runApp('wineapp')
wine <- read_csv("data/winemag-data-130k-v2.csv")
wine <- subset(wine, select = -X1 )
world <- map_data("world")
names(wine)[4] <- "quality"
View(wine)
runApp('wineapp')
install.packages("DT")
runApp('wineapp')
runApp('wineapp')
?fluidPage
runApp('wineapp')
highlighted <- subset(world, region == input$countryInput, variety == input$varietyInput)
highlighted <- subset(world, region == "Canada", variety == "Chardonnay")
?subset
highlighted <- world %>%
filter(region == "Canada"& variety == "Chardonnay")
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
?column
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('~/Desktop/code/05-actionButton.R')
highlighted <- world %>%
filter(region == "Canada")
min(wine$quality)
highlighted <- world %>%
filter(region == "Canada")
max(wine$quality)
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
View(wine)
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
View(wine)
runApp('wineapp')
runApp('wineapp')
?is.na
runApp('wineapp')
runApp('wineapp')
?dataTableOutput
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
?wellPanel
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
highlighted <- world %>%
filter(region == "Canada")
world %>% filter(country == "United States of America")
highlighted <- world %>%
filter(region == "Canada")
world %>% filter(region == "United States of America")
highlighted <- world %>%
filter(region == "Canada")
world %>% filter(region == "United States of America")
unique(world$region)
highlighted <- world %>%
filter(region == "Canada")
world %>% filter(region == "USA")
unique(world$region)
View(w_count)
# join the two tables here to create a map
world <- map_data("world")
highlighted <- subset(world, region == "Canada")
#names(wine)[1] <- "region"
#test <- left_join(world,wine)
w_count <- wine %>%
group_by(country) %>%
mutate(count = n()) %>% # count the # of entries in each country
select(country, count)
w_count <- unique(w_count)
names(w_count)[1] <- "region"
w_count[w_count$region == "US"] <- "USA"
# join the two tables here to create a map
world <- map_data("world")
highlighted <- subset(world, region == "Canada")
#names(wine)[1] <- "region"
#test <- left_join(world,wine)
w_count <- wine %>%
group_by(country) %>%
mutate(count = n()) %>% # count the # of entries in each country
select(country, count)
w_count <- unique(w_count)
names(w_count)[1] <- "region"
w_count[w_count$region == "US"] <- w_count[w_count$region == "USA"]
# join the two tables here to create a map
world <- map_data("world")
highlighted <- subset(world, region == "Canada")
#names(wine)[1] <- "region"
#test <- left_join(world,wine)
w_count <- wine %>%
group_by(country) %>%
mutate(count = n()) %>% # count the # of entries in each country
select(country, count)
w_count <- unique(w_count)
names(w_count)[1] <- "region"
w_count[w_count$region == "US"] <- w_count$region == "USA"
# join the two tables here to create a map
world <- map_data("world")
highlighted <- subset(world, region == "Canada")
#names(wine)[1] <- "region"
#test <- left_join(world,wine)
w_count <- wine %>%
group_by(country) %>%
mutate(count = n()) %>% # count the # of entries in each country
select(country, count)
w_count <- unique(w_count)
names(w_count)[1] <- "region"
w_count[w_count$region == "US"] <- "USA"
w_count[w_count$region == "US"]
w_count$region == "US"
w_count[w_count$region == "US"]
w_count["US"]
w_count$region["US"]
w_count$region[w_count$region["US"]]
w_count$region[w_count$region == "US"]
w_count$region[w_count$region == "US"] <- "USA"
runApp('wineapp')
runApp('wineapp')
unique(world$region)
runApp('wineapp')
runApp('wineapp')
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
theme_minimal() +
scale_fill_gradient(low = "misty rose",high = "violetred4", name= "Numbers of \nEntries") +
xlab("Longitude") +
ylab("Latitude"))
map +
geom_polygon(data = highlighted, aes(x = long, y = lat,group = group), fill = NA, colour = "black")
?scale_fill_gradient
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
theme_minimal() +
scale_fill_gradient(low = "misty rose",high = "violetred4", name= "Numbers of \nEntries", guide = "colourbar") +
xlab("Longitude") +
ylab("Latitude"))
map +
geom_polygon(data = highlighted, aes(x = long, y = lat,group = group), fill = NA, colour = "black")
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
theme_minimal() +
scale_fill_gradient(low = "misty rose",high = "violetred4",guide = "colourbar") +
xlab("Longitude") +
ylab("Latitude"))
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
guides(fill = FALSE) +
scale_fill_gradient(low = "misty rose",high = "violetred4",guide = "colourbar") +
theme_minimal() +
xlab("Longitude") +
ylab("Latitude"))
map +
geom_polygon(data = highlighted, aes(x = long, y = lat,group = group), fill = NA, colour = "black")
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
#guides(fill = FALSE) +
scale_fill_gradient(low = "misty rose",high = "violetred4",guide = "colourbar") +
theme_minimal() +
xlab("Longitude") +
ylab("Latitude"))
?guides
(map <- ggplot(test) +
geom_polygon(aes(x=long, y = lat, group = group, fill = count)) +
#guides(fill = FALSE) +
scale_fill_gradient(low = "misty rose",high = "violetred4",guide = "colourbar", name = "Numbers of \nEntries") +
theme_minimal() +
xlab("Longitude") +
ylab("Latitude"))
runApp('wineapp')
install.packages("maps")
install.packages("maps")
install.packages("shinythemes")
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
runApp('wineapp')
